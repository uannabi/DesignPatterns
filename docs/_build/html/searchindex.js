Search.setIndex({"docnames": ["BehavioralPattern", "CreationalPatterns", "GangOfFour", "StructuralPattern", "index", "modules"], "filenames": ["BehavioralPattern.rst", "CreationalPatterns.rst", "GangOfFour.rst", "StructuralPattern.rst", "index.rst", "modules.rst"], "titles": ["BehavioralPattern package", "CreationalPatterns package", "GangOfFour package", "StructuralPattern package", "Welcome to Desing Pattern in Python\u2019s documentation!", "DesignPatterns"], "terms": {"class": [0, 1, 2, 3], "client": [0, 5], "sourc": [0, 1, 2, 3], "base": [0, 1, 2, 3], "object": [0, 1, 2, 3], "deleg": [0, 5], "request": 0, "concreatehandler1": [0, 5], "successor": 0, "handler": [0, 5], "concret": [0, 1, 3], "1": 0, "defaulthandl": [0, 5], "default": 0, "abstract": [0, 1, 2, 3], "handel": 0, "count_to": [0, 5], "count": 0, "our": [0, 1], "implement": [0, 3], "core": [0, 5], "name": [0, 1, 2, 3, 5], "subject": [0, 5], "properti": 0, "temp": [0, 5], "attach": [0, 5], "detach": [0, 5], "notifi": [0, 5], "modifi": 0, "none": [0, 1], "tempviewr": [0, 5], "updat": [0, 1, 5], "function": [0, 3], "The": 0, "pattern": 0, "execut": [0, 2, 5], "method": [0, 1, 2, 3, 5], "print": [0, 3], "being": 0, "us": 0, "strategy_on": [0, 5], "self": 0, "strategy_two": [0, 5], "electrcian": [0, 5], "electrician": 0, "visit": [0, 5], "hous": [0, 1, 5], "havcspecialist": [0, 5], "accept": [0, 5], "interfac": 0, "work_on_electr": [0, 5], "eleactracian": 0, "work_on_hvac": [0, 5], "hvac_specialist": 0, "abstracdt": 0, "e": [0, 5], "creat": 0, "home": [0, 5], "let": 0, "hvac": 0, "specilist": 0, "work": [0, 1], "invok": 0, "hv": [0, 5], "an": [0, 1], "electician": 0, "owl": [1, 5], "one": [1, 3], "return": 1, "speak": [1, 5], "owlfactori": [1, 5], "get_food": [1, 5], "food": 1, "get_pet": [1, 5], "petstor": [1, 5], "pet_factori": 1, "show_pet": [1, 5], "util": 1, "displai": 1, "detail": 1, "petfactori": 1, "create_new_car": [1, 5], "car": [1, 5], "product": 1, "director": [1, 5], "construct_car": [1, 5], "get_car": [1, 5], "skylarkbuild": [1, 5], "provid": 1, "part": 1, "tool": 1, "add_engin": [1, 5], "add_model": [1, 5], "add_tir": [1, 5], "espresso": [1, 3, 5], "flavour": [1, 5], "latt": [1, 5], "get_coffe": [1, 5], "coffi": 1, "clone": [1, 5], "attr": 1, "regist": 1, "its": 1, "attribut": 1, "register_object": [1, 5], "obj": 1, "unregister_object": [1, 5], "unregist": 1, "ada": [1, 5], "make": 1, "global": 1, "axiata": [1, 5], "kwarg": [1, 3], "thi": [1, 3], "now": 1, "share": 1, "all": 1, "among": 1, "variou": 1, "instanc": 1, "copi": [2, 5], "macro": [2, 5], "add": [2, 3, 5], "run": [2, 5], "past": [2, 5], "save": [2, 5], "main": [2, 5], "subsystema": [2, 5], "method1": [2, 5], "method2": [2, 5], "subsystemb": [2, 5], "abstractexpress": [2, 5], "nonterminalexpress": [2, 5], "express": 2, "terminalexpress": [2, 5], "colleagu": [2, 5], "id": 2, "getid": [2, 5], "receiv": [2, 5], "msg": 2, "send": [2, 5], "concretecolleagu": [2, 5], "concretemedi": [2, 5], "distribut": [2, 5], "sender": 2, "origin": [2, 3, 5], "create_memento": [2, 5], "set_memento": [2, 5], "memento": 2, "atm": [2, 5], "setstat": [2, 5], "atmstat": [2, 5], "allow": [2, 5], "gonext": [2, 5], "off": [2, 5], "On": [2, 5], "abstractclass": [2, 5], "abc": 2, "do_step_1": [2, 5], "do_step_2": [2, 5], "do_this_or": [2, 5], "template_method": [2, 5], "th": 2, "i": [2, 3], "contain": 2, "collect": 2, "stai": 2, "same": 2, "overriden": 2, "option": 2, "concreteclassa": [2, 5], "concreteclassb": [2, 5], "adapted_method": 3, "chang": 3, "generr": 3, "individu": 3, "anoth": 3, "british": [3, 5], "english": 3, "speaker": 3, "speak_english": [3, 5], "korean": [3, 5], "speak_korean": [3, 5], "circl": [3, 5], "x": 3, "y": 3, "radiu": 3, "drawing_api": 3, "independ": 3, "exampl": 3, "could": 3, "rectangl": 3, "draw": [3, 5], "specif": 3, "taken": 3, "care": 3, "drawingapi": 3, "scale": [3, 5], "percent": 3, "drawingapion": [3, 5], "draw_circl": [3, 5], "drawingapitwo": [3, 5], "two": 3, "child": [3, 5], "arg": 3, "compon": [3, 5], "component_funct": [3, 5], "append_child": [3, 5], "new": 3, "item": 3, "remove_child": [3, 5], "remov": 3, "makecoffe": [3, 5], "defin": 3, "produc": [3, 5], "resourc": 3, "intens": 3, "instanti": 3, "meet": [3, 5], "rel": 3, "less": 3, "middleman": 3, "check": 3, "team": 3, "lead": 3, "avail": 3, "designpattern": 4, "behavioralpattern": [4, 5], "packag": [4, 5], "creationalpattern": [4, 5], "gangoffour": [4, 5], "structuralpattern": [4, 5], "index": 4, "modul": [4, 5], "search": 4, "page": 4, "submodul": 5, "chain": 5, "conf": 5, "iter": 5, "observ": 5, "strategi": 5, "visitor": 5, "content": 5, "abstractfactori": 5, "builder": 5, "factori": 5, "prototyp": 5, "singleton": 5, "command": 5, "facad": 5, "interpret": 5, "mediat": 5, "momento": 5, "state": 5, "templat": 5, "adapt": 5, "bridg": 5, "composit": 5, "decor": 5, "proxi": 5}, "objects": {"": [[0, 0, 0, "-", "BehavioralPattern"], [1, 0, 0, "-", "CreationalPatterns"], [2, 0, 0, "-", "GangOfFour"], [3, 0, 0, "-", "StructuralPattern"]], "BehavioralPattern": [[0, 0, 0, "-", "chain"], [0, 0, 0, "-", "iterator"], [0, 0, 0, "-", "observer"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "visitor"]], "BehavioralPattern.chain": [[0, 1, 1, "", "Client"], [0, 1, 1, "", "ConcreateHandler1"], [0, 1, 1, "", "DefaultHandler"], [0, 1, 1, "", "Handler"]], "BehavioralPattern.chain.Client": [[0, 2, 1, "", "delegate"]], "BehavioralPattern.chain.Handler": [[0, 2, 1, "", "handler"]], "BehavioralPattern.iterator": [[0, 3, 1, "", "count_to"]], "BehavioralPattern.observer": [[0, 1, 1, "", "Core"], [0, 1, 1, "", "Subject"], [0, 1, 1, "", "TempViewr"]], "BehavioralPattern.observer.Core": [[0, 4, 1, "", "temp"]], "BehavioralPattern.observer.Subject": [[0, 2, 1, "", "attach"], [0, 2, 1, "", "detach"], [0, 2, 1, "", "notify"]], "BehavioralPattern.observer.TempViewr": [[0, 2, 1, "", "update"]], "BehavioralPattern.strategy": [[0, 1, 1, "", "Strategy"], [0, 3, 1, "", "strategy_one"], [0, 3, 1, "", "strategy_two"]], "BehavioralPattern.strategy.Strategy": [[0, 2, 1, "", "execute"]], "BehavioralPattern.visitor": [[0, 1, 1, "", "Electrcian"], [0, 1, 1, "", "HavcSpecialist"], [0, 1, 1, "", "House"], [0, 1, 1, "", "Visitor"], [0, 5, 1, "", "e"], [0, 5, 1, "", "home"], [0, 5, 1, "", "hv"]], "BehavioralPattern.visitor.Electrcian": [[0, 2, 1, "", "visit"]], "BehavioralPattern.visitor.HavcSpecialist": [[0, 2, 1, "", "visit"]], "BehavioralPattern.visitor.House": [[0, 2, 1, "", "accept"], [0, 2, 1, "", "work_on_electricity"], [0, 2, 1, "", "work_on_hvac"]], "CreationalPatterns": [[1, 0, 0, "-", "abstractFactory"], [1, 0, 0, "-", "builder"], [1, 0, 0, "-", "factory"], [1, 0, 0, "-", "prototype"], [1, 0, 0, "-", "singleton"]], "CreationalPatterns.abstractFactory": [[1, 1, 1, "", "Owl"], [1, 1, 1, "", "OwlFactory"], [1, 1, 1, "", "PetStore"]], "CreationalPatterns.abstractFactory.Owl": [[1, 2, 1, "", "speak"]], "CreationalPatterns.abstractFactory.OwlFactory": [[1, 2, 1, "", "get_food"], [1, 2, 1, "", "get_pet"]], "CreationalPatterns.abstractFactory.PetStore": [[1, 2, 1, "", "show_pet"]], "CreationalPatterns.builder": [[1, 1, 1, "", "Builder"], [1, 1, 1, "", "Car"], [1, 1, 1, "", "Director"], [1, 1, 1, "", "SkylarkBuilder"]], "CreationalPatterns.builder.Builder": [[1, 2, 1, "", "create_new_car"]], "CreationalPatterns.builder.Director": [[1, 2, 1, "", "construct_car"], [1, 2, 1, "", "get_car"]], "CreationalPatterns.builder.SkylarkBuilder": [[1, 2, 1, "", "add_engine"], [1, 2, 1, "", "add_model"], [1, 2, 1, "", "add_tires"]], "CreationalPatterns.factory": [[1, 1, 1, "", "Espresso"], [1, 1, 1, "", "Latte"], [1, 3, 1, "", "get_coffee"]], "CreationalPatterns.factory.Espresso": [[1, 2, 1, "", "flavour"]], "CreationalPatterns.factory.Latte": [[1, 2, 1, "", "flavour"]], "CreationalPatterns.prototype": [[1, 1, 1, "", "Car"], [1, 1, 1, "", "Prototype"]], "CreationalPatterns.prototype.Prototype": [[1, 2, 1, "", "clone"], [1, 2, 1, "", "register_objects"], [1, 2, 1, "", "unregister_objects"]], "CreationalPatterns.singleton": [[1, 1, 1, "", "Ada"], [1, 1, 1, "", "Axiata"]], "GangOfFour": [[2, 0, 0, "-", "command"], [2, 0, 0, "-", "facade"], [2, 0, 0, "-", "interpreter"], [2, 0, 0, "-", "mediator"], [2, 0, 0, "-", "momento"], [2, 0, 0, "-", "state"], [2, 0, 0, "-", "template"]], "GangOfFour.command": [[2, 1, 1, "", "Command"], [2, 1, 1, "", "Copy"], [2, 1, 1, "", "Macro"], [2, 1, 1, "", "Paste"], [2, 1, 1, "", "Save"], [2, 3, 1, "", "main"]], "GangOfFour.command.Command": [[2, 2, 1, "", "execute"]], "GangOfFour.command.Copy": [[2, 2, 1, "", "execute"]], "GangOfFour.command.Macro": [[2, 2, 1, "", "add"], [2, 2, 1, "", "run"]], "GangOfFour.command.Paste": [[2, 2, 1, "", "execute"]], "GangOfFour.command.Save": [[2, 2, 1, "", "execute"]], "GangOfFour.facade": [[2, 1, 1, "", "Facade"], [2, 1, 1, "", "SubsystemA"], [2, 1, 1, "", "SubsystemB"], [2, 3, 1, "", "main"]], "GangOfFour.facade.Facade": [[2, 2, 1, "", "method"]], "GangOfFour.facade.SubsystemA": [[2, 2, 1, "", "method1"], [2, 2, 1, "", "method2"]], "GangOfFour.facade.SubsystemB": [[2, 2, 1, "", "method1"], [2, 2, 1, "", "method2"]], "GangOfFour.interpreter": [[2, 1, 1, "", "AbstractExpression"], [2, 1, 1, "", "NonterminalExpression"], [2, 1, 1, "", "TerminalExpression"], [2, 3, 1, "", "main"]], "GangOfFour.interpreter.AbstractExpression": [[2, 2, 1, "", "interpret"]], "GangOfFour.interpreter.NonterminalExpression": [[2, 2, 1, "", "interpret"]], "GangOfFour.interpreter.TerminalExpression": [[2, 2, 1, "", "interpret"]], "GangOfFour.mediator": [[2, 1, 1, "", "Colleague"], [2, 1, 1, "", "ConcreteColleague"], [2, 1, 1, "", "ConcreteMediator"], [2, 1, 1, "", "Mediator"], [2, 3, 1, "", "main"]], "GangOfFour.mediator.Colleague": [[2, 2, 1, "", "getID"], [2, 2, 1, "", "receive"], [2, 2, 1, "", "send"]], "GangOfFour.mediator.ConcreteColleague": [[2, 2, 1, "", "receive"], [2, 2, 1, "", "send"]], "GangOfFour.mediator.ConcreteMediator": [[2, 2, 1, "", "add"], [2, 2, 1, "", "distribute"]], "GangOfFour.mediator.Mediator": [[2, 2, 1, "", "add"], [2, 2, 1, "", "distribute"]], "GangOfFour.momento": [[2, 1, 1, "", "Originator"], [2, 3, 1, "", "main"]], "GangOfFour.momento.Originator": [[2, 2, 1, "", "create_memento"], [2, 2, 1, "", "set_memento"]], "GangOfFour.state": [[2, 1, 1, "", "ATM"], [2, 1, 1, "", "AtmState"], [2, 1, 1, "", "Off"], [2, 1, 1, "", "On"], [2, 3, 1, "", "main"]], "GangOfFour.state.ATM": [[2, 2, 1, "", "setState"]], "GangOfFour.state.AtmState": [[2, 6, 1, "", "allowed"], [2, 2, 1, "", "goNext"], [2, 6, 1, "", "name"]], "GangOfFour.state.Off": [[2, 6, 1, "", "allowed"], [2, 6, 1, "", "name"]], "GangOfFour.state.On": [[2, 6, 1, "", "allowed"], [2, 6, 1, "", "name"]], "GangOfFour.template": [[2, 1, 1, "", "AbstractClass"], [2, 1, 1, "", "ConcreteClassA"], [2, 1, 1, "", "ConcreteClassB"], [2, 3, 1, "", "main"]], "GangOfFour.template.AbstractClass": [[2, 2, 1, "", "do_step_1"], [2, 2, 1, "", "do_step_2"], [2, 2, 1, "", "do_this_or"], [2, 2, 1, "", "template_method"]], "GangOfFour.template.ConcreteClassA": [[2, 2, 1, "", "do_step_1"], [2, 2, 1, "", "do_step_2"]], "GangOfFour.template.ConcreteClassB": [[2, 2, 1, "", "do_step_1"], [2, 2, 1, "", "do_step_2"], [2, 2, 1, "", "do_this_or"]], "StructuralPattern": [[3, 0, 0, "-", "adapter"], [3, 0, 0, "-", "bridge"], [3, 0, 0, "-", "composit"], [3, 0, 0, "-", "decorator"], [3, 0, 0, "-", "proxy"]], "StructuralPattern.adapter": [[3, 1, 1, "", "Adapter"], [3, 1, 1, "", "British"], [3, 1, 1, "", "Korean"]], "StructuralPattern.adapter.British": [[3, 2, 1, "", "speak_english"]], "StructuralPattern.adapter.Korean": [[3, 2, 1, "", "speak_korean"]], "StructuralPattern.bridge": [[3, 1, 1, "", "Circle"], [3, 1, 1, "", "DrawingAPIOne"], [3, 1, 1, "", "DrawingAPITwo"]], "StructuralPattern.bridge.Circle": [[3, 2, 1, "", "draw"], [3, 2, 1, "", "scale"]], "StructuralPattern.bridge.DrawingAPIOne": [[3, 2, 1, "", "draw_circle"]], "StructuralPattern.bridge.DrawingAPITwo": [[3, 2, 1, "", "draw_circle"]], "StructuralPattern.composit": [[3, 1, 1, "", "Child"], [3, 1, 1, "", "Component"], [3, 1, 1, "", "Composite"]], "StructuralPattern.composit.Child": [[3, 2, 1, "", "component_function"]], "StructuralPattern.composit.Component": [[3, 2, 1, "", "component_function"]], "StructuralPattern.composit.Composite": [[3, 2, 1, "", "append_child"], [3, 2, 1, "", "component_function"], [3, 2, 1, "", "remove_child"]], "StructuralPattern.decorator": [[3, 3, 1, "", "Espresso"], [3, 3, 1, "", "MakeCoffee"]], "StructuralPattern.proxy": [[3, 1, 1, "", "Producer"], [3, 1, 1, "", "Proxy"]], "StructuralPattern.proxy.Producer": [[3, 2, 1, "", "meet"], [3, 2, 1, "", "producer"]], "StructuralPattern.proxy.Proxy": [[3, 2, 1, "", "produce"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"behavioralpattern": 0, "packag": [0, 1, 2, 3], "submodul": [0, 1, 2, 3], "chain": 0, "modul": [0, 1, 2, 3], "conf": 0, "iter": 0, "observ": 0, "strategi": 0, "visitor": 0, "content": [0, 1, 2, 3, 4], "creationalpattern": 1, "abstractfactori": 1, "builder": 1, "factori": 1, "prototyp": 1, "singleton": 1, "gangoffour": 2, "command": 2, "facad": 2, "interpret": 2, "mediat": 2, "momento": 2, "state": 2, "templat": 2, "structuralpattern": 3, "adapt": 3, "bridg": 3, "composit": 3, "decor": 3, "proxi": 3, "welcom": 4, "dese": 4, "pattern": 4, "python": 4, "": 4, "document": 4, "indic": 4, "tabl": 4, "designpattern": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"BehavioralPattern package": [[0, "behavioralpattern-package"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"]], "BehavioralPattern.chain module": [[0, "module-BehavioralPattern.chain"]], "BehavioralPattern.conf module": [[0, "behavioralpattern-conf-module"]], "BehavioralPattern.iterator module": [[0, "module-BehavioralPattern.iterator"]], "BehavioralPattern.observer module": [[0, "module-BehavioralPattern.observer"]], "BehavioralPattern.strategy module": [[0, "module-BehavioralPattern.strategy"]], "BehavioralPattern.visitor module": [[0, "module-BehavioralPattern.visitor"]], "Module contents": [[0, "module-BehavioralPattern"], [1, "module-CreationalPatterns"], [2, "module-GangOfFour"], [3, "module-StructuralPattern"]], "CreationalPatterns package": [[1, "creationalpatterns-package"]], "CreationalPatterns.abstractFactory module": [[1, "module-CreationalPatterns.abstractFactory"]], "CreationalPatterns.builder module": [[1, "module-CreationalPatterns.builder"]], "CreationalPatterns.factory module": [[1, "module-CreationalPatterns.factory"]], "CreationalPatterns.prototype module": [[1, "module-CreationalPatterns.prototype"]], "CreationalPatterns.singleton module": [[1, "module-CreationalPatterns.singleton"]], "GangOfFour package": [[2, "gangoffour-package"]], "GangOfFour.command module": [[2, "module-GangOfFour.command"]], "GangOfFour.facade module": [[2, "module-GangOfFour.facade"]], "GangOfFour.interpreter module": [[2, "module-GangOfFour.interpreter"]], "GangOfFour.mediator module": [[2, "module-GangOfFour.mediator"]], "GangOfFour.momento module": [[2, "module-GangOfFour.momento"]], "GangOfFour.state module": [[2, "module-GangOfFour.state"]], "GangOfFour.template module": [[2, "module-GangOfFour.template"]], "StructuralPattern package": [[3, "structuralpattern-package"]], "StructuralPattern.adapter module": [[3, "module-StructuralPattern.adapter"]], "StructuralPattern.bridge module": [[3, "module-StructuralPattern.bridge"]], "StructuralPattern.composit module": [[3, "module-StructuralPattern.composit"]], "StructuralPattern.decorator module": [[3, "module-StructuralPattern.decorator"]], "StructuralPattern.proxy module": [[3, "module-StructuralPattern.proxy"]], "Welcome to Desing Pattern in Python\u2019s documentation!": [[4, "welcome-to-desing-pattern-in-python-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "DesignPatterns": [[5, "designpatterns"]]}, "indexentries": {"behavioralpattern": [[0, "module-BehavioralPattern"]], "behavioralpattern.chain": [[0, "module-BehavioralPattern.chain"]], "behavioralpattern.iterator": [[0, "module-BehavioralPattern.iterator"]], "behavioralpattern.observer": [[0, "module-BehavioralPattern.observer"]], "behavioralpattern.strategy": [[0, "module-BehavioralPattern.strategy"]], "behavioralpattern.visitor": [[0, "module-BehavioralPattern.visitor"]], "client (class in behavioralpattern.chain)": [[0, "BehavioralPattern.chain.Client"]], "concreatehandler1 (class in behavioralpattern.chain)": [[0, "BehavioralPattern.chain.ConcreateHandler1"]], "core (class in behavioralpattern.observer)": [[0, "BehavioralPattern.observer.Core"]], "defaulthandler (class in behavioralpattern.chain)": [[0, "BehavioralPattern.chain.DefaultHandler"]], "electrcian (class in behavioralpattern.visitor)": [[0, "BehavioralPattern.visitor.Electrcian"]], "handler (class in behavioralpattern.chain)": [[0, "BehavioralPattern.chain.Handler"]], "havcspecialist (class in behavioralpattern.visitor)": [[0, "BehavioralPattern.visitor.HavcSpecialist"]], "house (class in behavioralpattern.visitor)": [[0, "BehavioralPattern.visitor.House"]], "strategy (class in behavioralpattern.strategy)": [[0, "BehavioralPattern.strategy.Strategy"]], "subject (class in behavioralpattern.observer)": [[0, "BehavioralPattern.observer.Subject"]], "tempviewr (class in behavioralpattern.observer)": [[0, "BehavioralPattern.observer.TempViewr"]], "visitor (class in behavioralpattern.visitor)": [[0, "BehavioralPattern.visitor.Visitor"]], "accept() (behavioralpattern.visitor.house method)": [[0, "BehavioralPattern.visitor.House.accept"]], "attach() (behavioralpattern.observer.subject method)": [[0, "BehavioralPattern.observer.Subject.attach"]], "count_to() (in module behavioralpattern.iterator)": [[0, "BehavioralPattern.iterator.count_to"]], "delegate() (behavioralpattern.chain.client method)": [[0, "BehavioralPattern.chain.Client.delegate"]], "detach() (behavioralpattern.observer.subject method)": [[0, "BehavioralPattern.observer.Subject.detach"]], "e (in module behavioralpattern.visitor)": [[0, "BehavioralPattern.visitor.e"]], "execute() (behavioralpattern.strategy.strategy method)": [[0, "BehavioralPattern.strategy.Strategy.execute"]], "handler() (behavioralpattern.chain.handler method)": [[0, "BehavioralPattern.chain.Handler.handler"]], "home (in module behavioralpattern.visitor)": [[0, "BehavioralPattern.visitor.home"]], "hv (in module behavioralpattern.visitor)": [[0, "BehavioralPattern.visitor.hv"]], "module": [[0, "module-BehavioralPattern"], [0, "module-BehavioralPattern.chain"], [0, "module-BehavioralPattern.iterator"], [0, "module-BehavioralPattern.observer"], [0, "module-BehavioralPattern.strategy"], [0, "module-BehavioralPattern.visitor"], [1, "module-CreationalPatterns"], [1, "module-CreationalPatterns.abstractFactory"], [1, "module-CreationalPatterns.builder"], [1, "module-CreationalPatterns.factory"], [1, "module-CreationalPatterns.prototype"], [1, "module-CreationalPatterns.singleton"], [2, "module-GangOfFour"], [2, "module-GangOfFour.command"], [2, "module-GangOfFour.facade"], [2, "module-GangOfFour.interpreter"], [2, "module-GangOfFour.mediator"], [2, "module-GangOfFour.momento"], [2, "module-GangOfFour.state"], [2, "module-GangOfFour.template"], [3, "module-StructuralPattern"], [3, "module-StructuralPattern.adapter"], [3, "module-StructuralPattern.bridge"], [3, "module-StructuralPattern.composit"], [3, "module-StructuralPattern.decorator"], [3, "module-StructuralPattern.proxy"]], "notify() (behavioralpattern.observer.subject method)": [[0, "BehavioralPattern.observer.Subject.notify"]], "strategy_one() (in module behavioralpattern.strategy)": [[0, "BehavioralPattern.strategy.strategy_one"]], "strategy_two() (in module behavioralpattern.strategy)": [[0, "BehavioralPattern.strategy.strategy_two"]], "temp (behavioralpattern.observer.core property)": [[0, "BehavioralPattern.observer.Core.temp"]], "update() (behavioralpattern.observer.tempviewr method)": [[0, "BehavioralPattern.observer.TempViewr.update"]], "visit() (behavioralpattern.visitor.electrcian method)": [[0, "BehavioralPattern.visitor.Electrcian.visit"]], "visit() (behavioralpattern.visitor.havcspecialist method)": [[0, "BehavioralPattern.visitor.HavcSpecialist.visit"]], "work_on_electricity() (behavioralpattern.visitor.house method)": [[0, "BehavioralPattern.visitor.House.work_on_electricity"]], "work_on_hvac() (behavioralpattern.visitor.house method)": [[0, "BehavioralPattern.visitor.House.work_on_hvac"]], "ada (class in creationalpatterns.singleton)": [[1, "CreationalPatterns.singleton.Ada"]], "axiata (class in creationalpatterns.singleton)": [[1, "CreationalPatterns.singleton.Axiata"]], "builder (class in creationalpatterns.builder)": [[1, "CreationalPatterns.builder.Builder"]], "car (class in creationalpatterns.builder)": [[1, "CreationalPatterns.builder.Car"]], "car (class in creationalpatterns.prototype)": [[1, "CreationalPatterns.prototype.Car"]], "creationalpatterns": [[1, "module-CreationalPatterns"]], "creationalpatterns.abstractfactory": [[1, "module-CreationalPatterns.abstractFactory"]], "creationalpatterns.builder": [[1, "module-CreationalPatterns.builder"]], "creationalpatterns.factory": [[1, "module-CreationalPatterns.factory"]], "creationalpatterns.prototype": [[1, "module-CreationalPatterns.prototype"]], "creationalpatterns.singleton": [[1, "module-CreationalPatterns.singleton"]], "director (class in creationalpatterns.builder)": [[1, "CreationalPatterns.builder.Director"]], "espresso (class in creationalpatterns.factory)": [[1, "CreationalPatterns.factory.Espresso"]], "latte (class in creationalpatterns.factory)": [[1, "CreationalPatterns.factory.Latte"]], "owl (class in creationalpatterns.abstractfactory)": [[1, "CreationalPatterns.abstractFactory.Owl"]], "owlfactory (class in creationalpatterns.abstractfactory)": [[1, "CreationalPatterns.abstractFactory.OwlFactory"]], "petstore (class in creationalpatterns.abstractfactory)": [[1, "CreationalPatterns.abstractFactory.PetStore"]], "prototype (class in creationalpatterns.prototype)": [[1, "CreationalPatterns.prototype.Prototype"]], "skylarkbuilder (class in creationalpatterns.builder)": [[1, "CreationalPatterns.builder.SkylarkBuilder"]], "add_engine() (creationalpatterns.builder.skylarkbuilder method)": [[1, "CreationalPatterns.builder.SkylarkBuilder.add_engine"]], "add_model() (creationalpatterns.builder.skylarkbuilder method)": [[1, "CreationalPatterns.builder.SkylarkBuilder.add_model"]], "add_tires() (creationalpatterns.builder.skylarkbuilder method)": [[1, "CreationalPatterns.builder.SkylarkBuilder.add_tires"]], "clone() (creationalpatterns.prototype.prototype method)": [[1, "CreationalPatterns.prototype.Prototype.clone"]], "construct_car() (creationalpatterns.builder.director method)": [[1, "CreationalPatterns.builder.Director.construct_car"]], "create_new_car() (creationalpatterns.builder.builder method)": [[1, "CreationalPatterns.builder.Builder.create_new_car"]], "flavour() (creationalpatterns.factory.espresso method)": [[1, "CreationalPatterns.factory.Espresso.flavour"]], "flavour() (creationalpatterns.factory.latte method)": [[1, "CreationalPatterns.factory.Latte.flavour"]], "get_car() (creationalpatterns.builder.director method)": [[1, "CreationalPatterns.builder.Director.get_car"]], "get_coffee() (in module creationalpatterns.factory)": [[1, "CreationalPatterns.factory.get_coffee"]], "get_food() (creationalpatterns.abstractfactory.owlfactory method)": [[1, "CreationalPatterns.abstractFactory.OwlFactory.get_food"]], "get_pet() (creationalpatterns.abstractfactory.owlfactory method)": [[1, "CreationalPatterns.abstractFactory.OwlFactory.get_pet"]], "register_objects() (creationalpatterns.prototype.prototype method)": [[1, "CreationalPatterns.prototype.Prototype.register_objects"]], "show_pet() (creationalpatterns.abstractfactory.petstore method)": [[1, "CreationalPatterns.abstractFactory.PetStore.show_pet"]], "speak() (creationalpatterns.abstractfactory.owl method)": [[1, "CreationalPatterns.abstractFactory.Owl.speak"]], "unregister_objects() (creationalpatterns.prototype.prototype method)": [[1, "CreationalPatterns.prototype.Prototype.unregister_objects"]], "atm (class in gangoffour.state)": [[2, "GangOfFour.state.ATM"]], "abstractclass (class in gangoffour.template)": [[2, "GangOfFour.template.AbstractClass"]], "abstractexpression (class in gangoffour.interpreter)": [[2, "GangOfFour.interpreter.AbstractExpression"]], "atmstate (class in gangoffour.state)": [[2, "GangOfFour.state.AtmState"]], "colleague (class in gangoffour.mediator)": [[2, "GangOfFour.mediator.Colleague"]], "command (class in gangoffour.command)": [[2, "GangOfFour.command.Command"]], "concreteclassa (class in gangoffour.template)": [[2, "GangOfFour.template.ConcreteClassA"]], "concreteclassb (class in gangoffour.template)": [[2, "GangOfFour.template.ConcreteClassB"]], "concretecolleague (class in gangoffour.mediator)": [[2, "GangOfFour.mediator.ConcreteColleague"]], "concretemediator (class in gangoffour.mediator)": [[2, "GangOfFour.mediator.ConcreteMediator"]], "copy (class in gangoffour.command)": [[2, "GangOfFour.command.Copy"]], "facade (class in gangoffour.facade)": [[2, "GangOfFour.facade.Facade"]], "gangoffour": [[2, "module-GangOfFour"]], "gangoffour.command": [[2, "module-GangOfFour.command"]], "gangoffour.facade": [[2, "module-GangOfFour.facade"]], "gangoffour.interpreter": [[2, "module-GangOfFour.interpreter"]], "gangoffour.mediator": [[2, "module-GangOfFour.mediator"]], "gangoffour.momento": [[2, "module-GangOfFour.momento"]], "gangoffour.state": [[2, "module-GangOfFour.state"]], "gangoffour.template": [[2, "module-GangOfFour.template"]], "macro (class in gangoffour.command)": [[2, "GangOfFour.command.Macro"]], "mediator (class in gangoffour.mediator)": [[2, "GangOfFour.mediator.Mediator"]], "nonterminalexpression (class in gangoffour.interpreter)": [[2, "GangOfFour.interpreter.NonterminalExpression"]], "off (class in gangoffour.state)": [[2, "GangOfFour.state.Off"]], "on (class in gangoffour.state)": [[2, "GangOfFour.state.On"]], "originator (class in gangoffour.momento)": [[2, "GangOfFour.momento.Originator"]], "paste (class in gangoffour.command)": [[2, "GangOfFour.command.Paste"]], "save (class in gangoffour.command)": [[2, "GangOfFour.command.Save"]], "subsystema (class in gangoffour.facade)": [[2, "GangOfFour.facade.SubsystemA"]], "subsystemb (class in gangoffour.facade)": [[2, "GangOfFour.facade.SubsystemB"]], "terminalexpression (class in gangoffour.interpreter)": [[2, "GangOfFour.interpreter.TerminalExpression"]], "add() (gangoffour.command.macro method)": [[2, "GangOfFour.command.Macro.add"]], "add() (gangoffour.mediator.concretemediator method)": [[2, "GangOfFour.mediator.ConcreteMediator.add"]], "add() (gangoffour.mediator.mediator method)": [[2, "GangOfFour.mediator.Mediator.add"]], "allowed (gangoffour.state.atmstate attribute)": [[2, "GangOfFour.state.AtmState.allowed"]], "allowed (gangoffour.state.off attribute)": [[2, "GangOfFour.state.Off.allowed"]], "allowed (gangoffour.state.on attribute)": [[2, "GangOfFour.state.On.allowed"]], "create_memento() (gangoffour.momento.originator method)": [[2, "GangOfFour.momento.Originator.create_memento"]], "distribute() (gangoffour.mediator.concretemediator method)": [[2, "GangOfFour.mediator.ConcreteMediator.distribute"]], "distribute() (gangoffour.mediator.mediator method)": [[2, "GangOfFour.mediator.Mediator.distribute"]], "do_step_1() (gangoffour.template.abstractclass method)": [[2, "GangOfFour.template.AbstractClass.do_step_1"]], "do_step_1() (gangoffour.template.concreteclassa method)": [[2, "GangOfFour.template.ConcreteClassA.do_step_1"]], "do_step_1() (gangoffour.template.concreteclassb method)": [[2, "GangOfFour.template.ConcreteClassB.do_step_1"]], "do_step_2() (gangoffour.template.abstractclass method)": [[2, "GangOfFour.template.AbstractClass.do_step_2"]], "do_step_2() (gangoffour.template.concreteclassa method)": [[2, "GangOfFour.template.ConcreteClassA.do_step_2"]], "do_step_2() (gangoffour.template.concreteclassb method)": [[2, "GangOfFour.template.ConcreteClassB.do_step_2"]], "do_this_or() (gangoffour.template.abstractclass method)": [[2, "GangOfFour.template.AbstractClass.do_this_or"]], "do_this_or() (gangoffour.template.concreteclassb method)": [[2, "GangOfFour.template.ConcreteClassB.do_this_or"]], "execute() (gangoffour.command.command method)": [[2, "GangOfFour.command.Command.execute"]], "execute() (gangoffour.command.copy method)": [[2, "GangOfFour.command.Copy.execute"]], "execute() (gangoffour.command.paste method)": [[2, "GangOfFour.command.Paste.execute"]], "execute() (gangoffour.command.save method)": [[2, "GangOfFour.command.Save.execute"]], "getid() (gangoffour.mediator.colleague method)": [[2, "GangOfFour.mediator.Colleague.getID"]], "gonext() (gangoffour.state.atmstate method)": [[2, "GangOfFour.state.AtmState.goNext"]], "interpret() (gangoffour.interpreter.abstractexpression method)": [[2, "GangOfFour.interpreter.AbstractExpression.interpret"]], "interpret() (gangoffour.interpreter.nonterminalexpression method)": [[2, "GangOfFour.interpreter.NonterminalExpression.interpret"]], "interpret() (gangoffour.interpreter.terminalexpression method)": [[2, "GangOfFour.interpreter.TerminalExpression.interpret"]], "main() (in module gangoffour.command)": [[2, "GangOfFour.command.main"]], "main() (in module gangoffour.facade)": [[2, "GangOfFour.facade.main"]], "main() (in module gangoffour.interpreter)": [[2, "GangOfFour.interpreter.main"]], "main() (in module gangoffour.mediator)": [[2, "GangOfFour.mediator.main"]], "main() (in module gangoffour.momento)": [[2, "GangOfFour.momento.main"]], "main() (in module gangoffour.state)": [[2, "GangOfFour.state.main"]], "main() (in module gangoffour.template)": [[2, "GangOfFour.template.main"]], "method() (gangoffour.facade.facade method)": [[2, "GangOfFour.facade.Facade.method"]], "method1() (gangoffour.facade.subsystema method)": [[2, "GangOfFour.facade.SubsystemA.method1"]], "method1() (gangoffour.facade.subsystemb method)": [[2, "GangOfFour.facade.SubsystemB.method1"]], "method2() (gangoffour.facade.subsystema method)": [[2, "GangOfFour.facade.SubsystemA.method2"]], "method2() (gangoffour.facade.subsystemb method)": [[2, "GangOfFour.facade.SubsystemB.method2"]], "name (gangoffour.state.atmstate attribute)": [[2, "GangOfFour.state.AtmState.name"]], "name (gangoffour.state.off attribute)": [[2, "GangOfFour.state.Off.name"]], "name (gangoffour.state.on attribute)": [[2, "GangOfFour.state.On.name"]], "receive() (gangoffour.mediator.colleague method)": [[2, "GangOfFour.mediator.Colleague.receive"]], "receive() (gangoffour.mediator.concretecolleague method)": [[2, "GangOfFour.mediator.ConcreteColleague.receive"]], "run() (gangoffour.command.macro method)": [[2, "GangOfFour.command.Macro.run"]], "send() (gangoffour.mediator.colleague method)": [[2, "GangOfFour.mediator.Colleague.send"]], "send() (gangoffour.mediator.concretecolleague method)": [[2, "GangOfFour.mediator.ConcreteColleague.send"]], "setstate() (gangoffour.state.atm method)": [[2, "GangOfFour.state.ATM.setState"]], "set_memento() (gangoffour.momento.originator method)": [[2, "GangOfFour.momento.Originator.set_memento"]], "template_method() (gangoffour.template.abstractclass method)": [[2, "GangOfFour.template.AbstractClass.template_method"]], "adapter (class in structuralpattern.adapter)": [[3, "StructuralPattern.adapter.Adapter"]], "british (class in structuralpattern.adapter)": [[3, "StructuralPattern.adapter.British"]], "child (class in structuralpattern.composit)": [[3, "StructuralPattern.composit.Child"]], "circle (class in structuralpattern.bridge)": [[3, "StructuralPattern.bridge.Circle"]], "component (class in structuralpattern.composit)": [[3, "StructuralPattern.composit.Component"]], "composite (class in structuralpattern.composit)": [[3, "StructuralPattern.composit.Composite"]], "drawingapione (class in structuralpattern.bridge)": [[3, "StructuralPattern.bridge.DrawingAPIOne"]], "drawingapitwo (class in structuralpattern.bridge)": [[3, "StructuralPattern.bridge.DrawingAPITwo"]], "espresso() (in module structuralpattern.decorator)": [[3, "StructuralPattern.decorator.Espresso"]], "korean (class in structuralpattern.adapter)": [[3, "StructuralPattern.adapter.Korean"]], "makecoffee() (in module structuralpattern.decorator)": [[3, "StructuralPattern.decorator.MakeCoffee"]], "producer (class in structuralpattern.proxy)": [[3, "StructuralPattern.proxy.Producer"]], "proxy (class in structuralpattern.proxy)": [[3, "StructuralPattern.proxy.Proxy"]], "structuralpattern": [[3, "module-StructuralPattern"]], "structuralpattern.adapter": [[3, "module-StructuralPattern.adapter"]], "structuralpattern.bridge": [[3, "module-StructuralPattern.bridge"]], "structuralpattern.composit": [[3, "module-StructuralPattern.composit"]], "structuralpattern.decorator": [[3, "module-StructuralPattern.decorator"]], "structuralpattern.proxy": [[3, "module-StructuralPattern.proxy"]], "append_child() (structuralpattern.composit.composite method)": [[3, "StructuralPattern.composit.Composite.append_child"]], "component_function() (structuralpattern.composit.child method)": [[3, "StructuralPattern.composit.Child.component_function"]], "component_function() (structuralpattern.composit.component method)": [[3, "StructuralPattern.composit.Component.component_function"]], "component_function() (structuralpattern.composit.composite method)": [[3, "StructuralPattern.composit.Composite.component_function"]], "draw() (structuralpattern.bridge.circle method)": [[3, "StructuralPattern.bridge.Circle.draw"]], "draw_circle() (structuralpattern.bridge.drawingapione method)": [[3, "StructuralPattern.bridge.DrawingAPIOne.draw_circle"]], "draw_circle() (structuralpattern.bridge.drawingapitwo method)": [[3, "StructuralPattern.bridge.DrawingAPITwo.draw_circle"]], "meet() (structuralpattern.proxy.producer method)": [[3, "StructuralPattern.proxy.Producer.meet"]], "produce() (structuralpattern.proxy.proxy method)": [[3, "StructuralPattern.proxy.Proxy.produce"]], "producer() (structuralpattern.proxy.producer method)": [[3, "StructuralPattern.proxy.Producer.producer"]], "remove_child() (structuralpattern.composit.composite method)": [[3, "StructuralPattern.composit.Composite.remove_child"]], "scale() (structuralpattern.bridge.circle method)": [[3, "StructuralPattern.bridge.Circle.scale"]], "speak_english() (structuralpattern.adapter.british method)": [[3, "StructuralPattern.adapter.British.speak_english"]], "speak_korean() (structuralpattern.adapter.korean method)": [[3, "StructuralPattern.adapter.Korean.speak_korean"]]}})